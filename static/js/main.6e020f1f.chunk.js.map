{"version":3,"sources":["components/Rating/Rating.tsx","components/UncontrolledAccordion/reducer.tsx","components/UncontrolledAccordion/UncontrolledAccordion.tsx","components/Accordion/Accordion.tsx","components/OnOff/OnOff.tsx","components/UnconrolledOnOff/UncontrolledOnOff.tsx","components/Select/Select.tsx","components/UncontrolledRating/UncontrolledRating.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Select/Select.module.css"],"names":["RatingMemo","props","Star","selected","value","onClickStar","onClick","Rating","React","memo","StarMemo","className","src","width","TOGGLE_COLLAPSED","reducer","state","action","type","collapsed","Error","AccordionTitle","title","AccordionBody","UncontrolledAccordion","useReducer","dispatch","titleValue","AccordionMemo","onChange","color","items","Accordion","AccordionTitleMemo","e","style","AccordionBodyMemo","map","i","index","OnOffMemo","onStyleControlled","height","border","display","padding","backgroundColor","offStyleControlled","marginLeft","indicatorStyleControlled","borderRadius","OnOff","UncontrolledOnOff","useState","defaultOn","on","setOn","onStyle","offStyle","indicatorStyle","SelectMemo","active","setActive","hoveredElValue","setHoveredElValue","selectedItem","find","hoveredItem","useEffect","toggleItems","s","select","onKeyUp","key","length","pretendentEl","tabIndex","main","onMouseEnter","item","Select","UncontrolledRating","defaultValue","setValue","AppMemo","switchOn","setSwitchOn","switchUncOn","setSwitchUncOn","ratingValue","setRatingValue","accordionCollapsed","setAccordionCollapsed","itemsValue","setItemsValue","selectValue","setSelectValue","toString","x","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6e020f1f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport type RatingValueType = 0 | 1 | 2 | 3 | 4 | 5\r\ntype RatingPropsType = {\r\n    value: RatingValueType\r\n    onClick: (value: RatingValueType) => void\r\n}\r\n\r\nfunction RatingMemo(props: RatingPropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={props.value > 0} onClickStar={props.onClick} value={1}/>\r\n            <Star selected={props.value > 1} onClickStar={props.onClick} value={2}/>\r\n            <Star selected={props.value > 2} onClickStar={props.onClick} value={3}/>\r\n            <Star selected={props.value > 3} onClickStar={props.onClick} value={4}/>\r\n            <Star selected={props.value > 4} onClickStar={props.onClick} value={5}/>\r\n        </div>\r\n    )\r\n}\r\nexport const Rating = React.memo(RatingMemo)\r\n\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    value: RatingValueType\r\n    onClickStar: (value: RatingValueType) => void\r\n}\r\n\r\nfunction StarMemo(props: StarPropsType) {\r\n    const onClickValue = () => {props.onClickStar(props.value)}\r\n\r\n    return (\r\n        <span className='star' onClick={onClickValue}>\r\n            {props.selected ? <img src='https://pngimg.com/uploads/red_star/red_star_PNG31.png' width={'5%'}/> : <img src='https://static.vecteezy.com/system/resources/previews/001/189/159/original/rainbow-star-png.png' width={'5%'}/>}\r\n            {/*{props.selected ? <b>star </b> : 'star '}*/}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst Star = React.memo(StarMemo)","import React from 'react';\r\n\r\nexport type ActionType = {\r\n    type: string\r\n}\r\nexport type StateType = {\r\n    collapsed: boolean\r\n}\r\nexport const TOGGLE_COLLAPSED = 'TOGGLE-COLLAPSED'\r\nexport const reducer = (state: StateType, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case TOGGLE_COLLAPSED:\r\n            return {\r\n                ...state,\r\n                collapsed: !state.collapsed\r\n            }\r\n        default:\r\n            throw new Error('bad action type')\r\n    }\r\n    return state\r\n}","import React, {useReducer} from 'react';\r\nimport {reducer, TOGGLE_COLLAPSED} from './reducer';\r\n\r\ntype AccordionPropsType = {\r\n    titleValue: string\r\n}\r\n\r\nfunction UncontrolledAccordion(props: AccordionPropsType) {\r\n\r\n    //const [collapsed, setCollapsed] = useState(false)\r\n    const [state, dispatch] = useReducer(reducer, {collapsed: false})\r\n\r\n    return (\r\n        <div>\r\n            <AccordionTitle\r\n                title={props.titleValue}\r\n                //onClick={() => {setCollapsed(!collapsed)}}\r\n                onClick={() => {\r\n                    dispatch({type: TOGGLE_COLLAPSED})\r\n                }}\r\n            />\r\n            {!state.collapsed && <AccordionBody/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n    onClick: () => void\r\n}\r\n\r\nfunction AccordionTitle(props: AccordionTitlePropsType) {\r\n    return (\r\n        <div>\r\n            <h3 onClick={props.onClick}>{props.title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction AccordionBody() {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>1</li>\r\n                <li>2</li>\r\n                <li>3</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UncontrolledAccordion","import React, {MouseEvent} from 'react';\r\n\r\nexport type ItemsType = {\r\n    title: string\r\n    value: any\r\n}\r\n\r\nexport type AccordionPropsType = {\r\n    titleValue: string\r\n    collapsed: boolean\r\n    /**\r\n     * Elements that are showed when accordion is opened (not collapsed)\r\n     */\r\n    onChange: () => void\r\n    items: ItemsType[]\r\n    onClick: (value: any) => void\r\n    color?: string\r\n}\r\n\r\nfunction AccordionMemo(props: AccordionPropsType) {\r\n    return (\r\n        <div>\r\n            <AccordionTitle\r\n                title={props.titleValue}\r\n                collapsed={props.collapsed}\r\n                onChange={props.onChange}\r\n                color={props.color}\r\n            />\r\n            {!props.collapsed && <AccordionBody\r\n                items={props.items}\r\n                onClick={props.onClick}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\nexport const Accordion = React.memo(AccordionMemo)\r\n\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n    collapsed: boolean\r\n    onChange: () => void\r\n    color?: string\r\n}\r\n\r\nfunction AccordionTitleMemo(props: AccordionTitlePropsType) {\r\n    const onClickCollapsed = (e: MouseEvent<HTMLDivElement>) => {\r\n        props.onChange()\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={onClickCollapsed}\r\n            style={{color: props.color ? props.color : 'black'}}\r\n        >\r\n            <h3>{props.title}</h3>\r\n        </div>\r\n    )\r\n}\r\nconst AccordionTitle = React.memo(AccordionTitleMemo)\r\n\r\ntype AccordionBodyPropsType = {\r\n    items: ItemsType[]\r\n    onClick: (value: any) => void\r\n}\r\n\r\nfunction AccordionBodyMemo(props: AccordionBodyPropsType) {\r\n    return (\r\n        <ul>\r\n            {\r\n                props.items.map((i, index) => <li key={index} onClick={() => {\r\n                    props.onClick(i.value)\r\n                }}>{i.title}</li>)\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst AccordionBody = React.memo(AccordionBodyMemo)\r\n","import React from 'react';\r\n\r\ntype OnOffPropsType = {\r\n    value: boolean\r\n    onClick: (value: boolean) => void\r\n}\r\n\r\nfunction OnOffMemo(props: OnOffPropsType) {\r\n\r\n    const onStyleControlled = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        padding: '2px',\r\n        backgroundColor: props.value ? 'green' : 'white',\r\n    }\r\n    const offStyleControlled = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '2px',\r\n        padding: '2px',\r\n        backgroundColor: props.value ? 'white' : 'red',\r\n    }\r\n    const indicatorStyleControlled = {\r\n        width: '10px',\r\n        height: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '5px',\r\n        backgroundColor: props.value ? 'green' : 'red',\r\n    }\r\n\r\n    const onClick = () => {\r\n        props.onClick(true)\r\n    }\r\n    const offClick = () => {\r\n        props.onClick(false)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={onStyleControlled} onClick={onClick}>On</div>\r\n            <div style={offStyleControlled} onClick={offClick}>Off</div>\r\n            <div style={indicatorStyleControlled}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const OnOff = React.memo(OnOffMemo)\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\n\r\ntype PropsType = {\r\n    onChange: (on: boolean) => void\r\n    defaultOn?: boolean\r\n}\r\n\r\nfunction UncontrolledOnOff(props: PropsType) {\r\n\r\n    const [on, setOn] = useState(props.defaultOn ? props.defaultOn : false)\r\n\r\n    const onStyle = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        padding: '2px',\r\n        backgroundColor: on ? 'green' : 'white',\r\n    }\r\n    const offStyle = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '2px',\r\n        padding: '2px',\r\n        backgroundColor: on ? 'white' : 'red',\r\n    }\r\n    const indicatorStyle = {\r\n        width: '10px',\r\n        height: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '5px',\r\n        backgroundColor: on ? 'green' : 'red',\r\n    }\r\n\r\n    const onClicked = () => {setOn(true); props.onChange(true)}\r\n    const offClicked = () => {setOn(false); props.onChange(false)}\r\n\r\n    return (\r\n        <div>\r\n            <div style={onStyle} onClick={onClicked}>On\r\n            </div>\r\n            <div style={offStyle} onClick={offClicked}>Off\r\n            </div>\r\n            <div style={indicatorStyle} />\r\n        </div>\r\n    )\r\n}\r\nexport default UncontrolledOnOff\r\n","import React, {KeyboardEvent, useEffect, useState} from 'react';\r\nimport s from './Select.module.css'\r\n\r\nexport type ItemsType = {\r\n    title: string\r\n    value: any\r\n}\r\ntype SelectPropsType = {\r\n    value?: any\r\n    onChange: (value: any) => void\r\n    items: ItemsType[]\r\n}\r\n\r\nfunction SelectMemo(props: SelectPropsType) {\r\n    const [active, setActive] = useState(false)\r\n    const [hoveredElValue, setHoveredElValue] = useState(props.value)\r\n\r\n    const selectedItem = props.items.find(i => i.value === props.value)\r\n    const hoveredItem = props.items.find(i => i.value === hoveredElValue)\r\n\r\n    useEffect(() => {\r\n        setHoveredElValue(props.value)\r\n    }, [props.value])\r\n\r\n    const toggleItems = () => {\r\n        setActive(!active)\r\n    }\r\n    const onItemClick = (value: any) => {\r\n        props.onChange(value)\r\n        toggleItems()\r\n    }\r\n\r\n    const onKeyUp = (e: KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\r\n            for (let i = 0; i < props.items.length; i++) {\r\n                if (props.items[i].value === hoveredElValue) {\r\n                    const pretendentEl = e.key === 'ArrowDown'\r\n                        ? props.items[i + 1]\r\n                        : props.items[i - 1]\r\n                    if (pretendentEl) {\r\n                        props.onChange(pretendentEl.value)\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            if (!selectedItem) {\r\n                props.onChange(props.items[0].value)\r\n            }\r\n        }\r\n\r\n        if (e.key === 'Enter' || e.key === 'Escape') {\r\n            setActive(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.select} onKeyUp={onKeyUp} tabIndex={0}>\r\n            <span className={s.main} onClick={toggleItems}>\r\n                {selectedItem && selectedItem.title}\r\n            </span>\r\n            {active &&\r\n            <div className={s.items}>\r\n                {props.items.map(i =>\r\n                    <div\r\n                        onMouseEnter={() => setHoveredElValue(i.value)}\r\n                        className={s.item + ' ' + (hoveredItem === i ? s.selected : '')}\r\n                        key={i.value}\r\n                        onClick={() => {\r\n                            onItemClick(i.value)\r\n                        }}\r\n                    >\r\n                        {i.title}\r\n                    </div>)}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Select = React.memo(SelectMemo)\r\n\r\n","import React, {useState} from 'react';\r\n\r\nexport type RatingValueType = 0 | 1 | 2 | 3 | 4 | 5\r\nexport type UncontrolledRatingPropsType = {\r\n    defaultValue?: RatingValueType\r\n    onChange: (value: RatingValueType) => void\r\n}\r\n\r\nexport function UncontrolledRating(props: UncontrolledRatingPropsType) {\r\n    const [value, setValue] = useState<RatingValueType>(props.defaultValue ? props.defaultValue : 0)\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={value > 0} setValue={() => {setValue(1); props.onChange(1)}}/>\r\n            <Star selected={value > 1} setValue={() => {setValue(2); props.onChange(2)}}/>\r\n            <Star selected={value > 2} setValue={() => {setValue(3); props.onChange(3)}}/>\r\n            <Star selected={value > 3} setValue={() => {setValue(4); props.onChange(4)}}/>\r\n            <Star selected={value > 4} setValue={() => {setValue(5); props.onChange(5)}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    setValue: () => void\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    const onClickSetValue = () => {props.setValue()}\r\n\r\n    return (\r\n        <span className='star' onClick={onClickSetValue}>\r\n                    {props.selected ? <img src=\"https://img.icons8.com/material/452/star--v1.png\" width={'5%'}/> :\r\n                        <img src=\"https://img.icons8.com/ios/452/star--v1.png\" width={'5%'}/>}\r\n                </span>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Rating, RatingValueType} from './components/Rating/Rating';\nimport UncontrolledAccordion from './components/UncontrolledAccordion/UncontrolledAccordion';\nimport {Accordion, ItemsType} from './components/Accordion/Accordion';\nimport {OnOff} from './components/OnOff/OnOff';\nimport UncontrolledOnOff from './components/UnconrolledOnOff/UncontrolledOnOff';\nimport {Select} from './components/Select/Select';\nimport {UncontrolledRating} from './components/UncontrolledRating/UncontrolledRating';\n\nfunction AppMemo() {\n    const [switchOn, setSwitchOn] = useState(false)\n    const [switchUncOn, setSwitchUncOn] = useState(false)\n    const [ratingValue, setRatingValue] = useState<RatingValueType>(0)\n    const [accordionCollapsed, setAccordionCollapsed] = useState<boolean>(false)\n    const [itemsValue, setItemsValue] = useState<ItemsType[]>([\n        {title: 'Marta', value: 1},\n        {title: 'Pavel', value: 2},\n        {title: 'Olga', value: 3},\n        {title: 'Irina', value: 4}\n    ])\n    const [selectValue, setSelectValue] = useState<ItemsType[]>([\n        {title: 'Minsk', value: 1},\n        {title: 'Moscow', value: 2},\n        {title: 'Kiev', value: 3},\n    ])\n\n    return (\n        <div className=\"app\">\n            <div className=\"uncontrolled\">\n                <h1>\n                    <b>Uncontrolled</b>\n                </h1>\n\n                <UncontrolledOnOff onChange={setSwitchUncOn}/> {switchUncOn.toString()}\n                <UncontrolledRating onChange={x => x}/>\n                <UncontrolledAccordion titleValue={'Menu'}/>\n                <UncontrolledAccordion titleValue={'Users'}/>\n            </div>\n\n            <div className=\"controlled\">\n                <h1>\n                    <b>Controlled</b>\n                </h1>\n\n                <OnOff value={switchOn}\n                       onClick={setSwitchOn}\n                />\n                <Rating\n                    value={ratingValue}\n                    onClick={setRatingValue}\n                />\n                <Accordion\n                    titleValue={'Menu'}\n                    collapsed={accordionCollapsed}\n                    onChange={() => {\n                        setAccordionCollapsed(!accordionCollapsed)\n                    }}\n                    items={itemsValue}\n                    onClick={() => setItemsValue(itemsValue)}\n                />\n                <Select\n                    value={selectValue}\n                    onChange={() => setSelectValue(selectValue)}\n                    items={selectValue}\n                />\n\n            </div>\n        </div>\n    );\n}\n\nconst App = React.memo(AppMemo)\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__2lNCU\",\"main\":\"Select_main__IiDa5\",\"items\":\"Select_items__T9TL4\",\"item\":\"Select_item__2iUVs\",\"selected\":\"Select_selected__3lMsV\"};"],"sourceRoot":""}